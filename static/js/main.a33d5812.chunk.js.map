{"version":3,"sources":["store/todo/constants/todo.constants.ts","store/todo/reducers/todo.reducer.ts","store/todo/reducers/index.ts","store/app.store.ts","containers/json-to-java/index.js","routes/index.tsx","containers/app/index.tsx","index.tsx"],"names":["TODO_ACTION_TYPES","initialState","todos","rootReducer","combineReducers","todo","state","action","type","ADD_TODO_SUCCESS","Object","assign","concat","payload","id","uuidV1","TOGGLE_TODO_STATUS_SUCCESS","map","completed","REMOVE_TODO_SUCCESS","filter","reduxPersistConfig","key","storage","stateReconciler","autoMergeLevel2","pReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","Footer","Header","Content","Sider","JsonToJavaContainer","useState","input","setInput","code","setCode","mode","convertObj","obj","str","entries","value","_","isString","isBoolean","isObject","justify","align","gutter","className","xs","span","sm","md","lg","xl","title","htmlElementProps","style","height","onChange","onClick","isArray","item","console","log","window","js_beautify","theme","newValue","name","editorProps","$blockScrolling","textAlign","href","target","rel","fontSize","GithubFilled","TwitterSquareFilled","Routes","path","exact","component","App","storePersistor","loading","targetHTMLElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.a33d5812.chunk.js","sourcesContent":["export enum TODO_ACTION_TYPES {\n  ADD_TODO_SUCCESS,\n  TOGGLE_TODO_STATUS_SUCCESS,\n  REMOVE_TODO_SUCCESS,\n}\n","import { TODO_ACTION_TYPES } from '../constants';\nimport { ITodo } from '../models/todo.model';\nimport { TodoActionTypes } from '../actions/todo.actions.types';\nimport { v1 as uuidV1 } from 'uuid';\n\ninterface ITodoReducerInterface {\n  todos: ITodo[];\n}\n\nexport const initialState: ITodoReducerInterface = {\n  todos: [],\n};\n\nexport const todoReducer = (state = initialState, action: TodoActionTypes) => {\n  switch (action?.type) {\n    case TODO_ACTION_TYPES.ADD_TODO_SUCCESS:\n      return Object.assign({}, state, {\n        todos: state.todos.concat({\n          ...action.payload,\n          ...{\n            id: action.payload.id ?? uuidV1(),\n          },\n        }),\n      });\n    case TODO_ACTION_TYPES.TOGGLE_TODO_STATUS_SUCCESS:\n      return Object.assign({}, state, {\n        todos: state.todos.map((todo: ITodo) =>\n          todo.id === action.payload.id\n            ? { ...todo, completed: !todo.completed }\n            : todo\n        ),\n      });\n    case TODO_ACTION_TYPES.REMOVE_TODO_SUCCESS:\n      return {\n        todos: state.todos.filter(\n          (todo: ITodo) => todo.id !== action.payload.id\n        ),\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { todoReducer } from './todo.reducer';\n\nexport const rootReducer = combineReducers({\n  todo: todoReducer\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { createStore, applyMiddleware, Store } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer, PersistConfig } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\n\nimport { rootReducer } from 'store/todo/reducers';\n\nconst reduxPersistConfig: PersistConfig<any> = {\n  key: 'application',\n  storage: storage,\n  stateReconciler: autoMergeLevel2\n};\n\nconst pReducer = persistReducer(reduxPersistConfig, rootReducer);\n\nexport const store: Store = createStore(pReducer, applyMiddleware(thunk));\n\nexport const persistor = persistStore(store);\n","import { useState } from 'react';\nimport { Row, Col, Card, PageHeader, Button, Layout } from 'antd';\nimport _ from 'lodash';\n\nimport { JsonEditor as Editor } from 'jsoneditor-react'\nimport 'jsoneditor-react/es/editor.min.css'\nimport AceEditor from \"react-ace\";\nimport { GithubFilled, TwitterSquareFilled } from '@ant-design/icons';\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/theme-github\";\nimport 'ace-builds/src-noconflict/ext-language_tools';\nimport 'ace-builds/src-noconflict/ext-beautify';\nimport { RedditIcon, RedditShareButton, TelegramIcon, TelegramShareButton, TwitterIcon, TwitterShareButton } from 'react-share';\nconst { Header, Footer, Sider, Content } = Layout;\n\nconst JsonToJavaContainer = () => {\n\n    const [input, setInput] = useState([{\"name\":\"2112\",\"test\":12.5,\"result\":true,\"obj\":{\"name\":\"1212\"}},{\"name\":\"2112\",\"test\":12.5,\"result\":true,\"obj\":{\"name\":\"1212\"}}])\n\n    const [code, setCode] = useState(\"int b=1;\")\n\n    const onChange = (newValue) => {\n        console.log(\"change\", newValue);\n    }\n\n    const [mode, setMode] = useState(\"text\")\n\n\n    const convertObj = (obj) => {\n        let str = \"new HashMap<String, Object>() {{ \\n\"\n        for (const [key, value] of Object.entries(obj)) {\n            // console.log(`${key}: ${value}`);\n            // console.log(_.isObject(value))\n            if (_.isString(value)) {\n                str += `put(\"${key}\", \"${value}\");\\n`\n            }\n            else if (_.isBoolean(value)) {\n                str += `put(\"${key}\", ${value});\\n`\n            }\n            else if (_.isObject(value)) {\n                str += `put(\"${key}\", ${convertObj(value)});\\n`\n            }\n            else {\n                str += `put(\"${key}\", ${value});\\n`\n            }\n        }\n        str += \"}}\\n\"\n        return str;\n    }\n\n    const convert = () => {\n\n        const obj = input;\n\n        // console.log(convertObj(obj));\n\n        if (_.isArray(obj)) {\n            // console.log(\"isarr\");\n            let str = \"List<Map<String,Object>> list = new ArrayList() {{ \\n\";\n            for (const item of obj) {\n                // console.log(item);\n                if (_.isArray(item)) {\n\n                }\n                else {\n                    str += `add(${convertObj(item)});\\n`\n                }\n            }\n            str += '}};'\n            console.log(str);\n            console.log(window.js_beautify(str));\n            setCode(window.js_beautify(str));\n            // const formatted = Beautify.beautify(str);\n            // setCode(formatted);\n            // const highlightedCode = hljs.highlight(str, {\n            //     language:\"java\"\n            // })\n            // console.log(highlightedCode)\n\n        }\n        else {\n            let str = \"Map<String,Object> map = \";\n            str += convertObj(obj);\n            str += ';\\n';\n            console.log(str);\n            setCode(window.js_beautify(str));\n            \n        }\n    }\n\n\n    return (\n        <div>\n        <Layout>\n            {/* <Header>Header</Header> */}\n            <Content>\n            <Row\n                justify=\"center\"\n                align=\"middle\"\n                gutter={[0, 20]}\n                className=\"todos-container\"\n            >\n                <Col\n                    xs={{ span: 23 }}\n                    sm={{ span: 23 }}\n                    md={{ span: 21 }}\n                    lg={{ span: 20 }}\n                    xl={{ span: 18 }}\n                >\n\n                    <PageHeader\n                        title=\"Convert JSON to Java\"\n                    // subTitle=\"To add a todo, just fill the form below and click in add todo.\"\n                    />\n                </Col>\n            </Row>\n\n            <Row\n                justify=\"center\"\n                align=\"middle\"\n                gutter={[20, 20]}\n                className=\"todos-container\"\n            >\n                <Col\n                    xs={{ span: 23 }}\n                    sm={{ span: 23 }}\n                    md={{ span: 23 }}\n                    lg={{ span: 10 }}\n                    xl={{ span: 10 }}\n                >\n                    <Editor\n                        id=\"JSONEditor\"\n                        mode={mode}\n                        htmlElementProps={{ style: { height: 500 } }}\n                        value={input}\n                        onChange={setInput}\n                    />\n\n                </Col>\n                <Col\n                    xs={{ span: 2 }}\n                    sm={{ span: 2 }}\n                    md={{ span: 2 }}\n                    lg={{ span: 2 }}\n                    xl={{ span: 2 }}\n                >\n                    <Button type=\"primary\"\n                        onClick={convert}\n                    >\n                        Convert\n                    </Button>\n\n                </Col>\n                <Col\n                    xs={{ span: 23 }}\n                    sm={{ span: 23 }}\n                    md={{ span: 23 }}\n                    lg={{ span: 10 }}\n                    xl={{ span: 10 }}\n                >\n                    <AceEditor\n                        mode=\"java\"\n                        theme=\"github\"\n                        onChange={onChange}\n                        value={code}\n                        name=\"UNIQUE_ID_OF_DIV\"\n                        editorProps={{ $blockScrolling: true }}\n                        // commands={Beautify.commands}\n                    />,\n\n            </Col>\n            </Row>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>\n            <Row\n              justify=\"center\"\n              align=\"middle\"\n              gutter={[10, 10]}\n            >\n              <a\n                href=\"https://github.com/nurgasemetey/json-to-java\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ fontSize: \"16px\" }}\n              >\n                  {/* a */}\n                <GithubFilled /> Source code on Github\n                </a>\n                  -\n              <a\n                href=\"https://twitter.com/nurgasemetey\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n                style={{ fontSize: \"16px\" }}\n              >\n                  {/* b */}\n                <TwitterSquareFilled /> Follow me on Twitter\n                </a>\n            </Row>\n            </Footer>\n        </Layout>\n\n        </div>\n    )\n\n}\n\n\nexport default JsonToJavaContainer\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { TodosContainer } from 'containers/todos';\nimport JsonToJavaContainer  from 'containers/json-to-java';\n\ninterface IRoutesProps {}\n\nexport const Routes: React.FC<IRoutesProps> = () => (\n  <Switch>\n    {/* <Route path=\"/\" exact={true} component={TodosContainer} /> */}\n    <Route path=\"/\" exact={true} component={JsonToJavaContainer} />\n  </Switch>\n);\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Routes } from 'routes';\nimport { Store } from 'redux';\nimport { Persistor } from 'redux-persist';\n\ninterface IAppProps {\n  store: Store;\n  storePersistor: Persistor;\n}\n\nexport const App: React.FC<IAppProps> = ({ store, storePersistor }) => {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={<div>Loading...</div>} persistor={storePersistor}>\n        <HashRouter>\n          <Routes />\n        </HashRouter>\n      </PersistGate>\n    </Provider>\n  );\n};\n","import React from 'react';\n\nimport 'assets/styles/base.less';\n\nimport { render } from 'react-dom';\n\nimport { store, persistor } from 'store/app.store';\n\nimport { App } from 'containers/app';\n\nconst targetHTMLElement = document.getElementById('root');\n\nrender(<App store={store} storePersistor={persistor} />, targetHTMLElement);\n"],"sourceRoot":""}